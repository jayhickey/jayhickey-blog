<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jay Hickey</title><link href="http://jayhickey.com/" rel="alternate"></link><link href="http://jayhickey.com/feeds/06.atom.xml" rel="self"></link><id>http://jayhickey.com/</id><updated>2012-06-27T12:39:00-04:00</updated><entry><title>Incredible Tie in the Olympic Trials</title><link href="http://jayhickey.com/2012/06/olympic-trials-tie" rel="alternate"></link><updated>2012-06-27T12:39:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-27:2012/06/olympic-trials-tie</id><summary type="html">&lt;p&gt;An unprecedented tie:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sprinters Jeneba Tarmoh and Allyson Felix appeared to finish third and fourth in the final of the women's 100-meter dash, but the state of the art cameras — that shoot at 3,000 frames per &lt;em&gt;second&lt;/em&gt; — showed that they actually crossed the finish line at the exact same time. Normally, that wouldn't be such a big deal except that the race was also being used to determine the runners who will represent the U.S. at the London Olympics next month. The U.S. is only allowed to send three runners and number four will watch from home.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is nuts! Tarmoh and Felix ran a time of 11.07 seconds. Taking it an extra decimal place, they were still tied at 11.068. It's coming down to either a run-off or a coin toss. Both women have the same coach, and are competing in the 200m dash as well (finals are this Friday at 9:50 PM EST). So if at least one of them qualifies in the 200, hopefully they'll let the other go in the 100. Having all your hopes and dreams of the Olympics come down to a &lt;em&gt;coin toss?&lt;/em&gt;  I couldn't even imagine.&lt;/p&gt;</summary></entry><entry><title>The First Time I Used Programming at Work</title><link href="http://jayhickey.com/2012/06/the-first-time-i-used-programming-at-work" rel="alternate"></link><updated>2012-06-25T09:19:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-25:2012/06/the-first-time-i-used-programming-at-work</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;I excitedly told my boss that I thought I could automate this painful and tedious process (which had to be done several times a year). I can’t remember her specific words, but she basically told me to stop working on that and just do it the way they had been: she didn’t believe it was going to work and thought it was a waste of time.&lt;/p&gt;
&lt;p&gt;Well, double f--- that. A couple more hours of applied effort and I had a macro that looped through all the images in a directory tree and laid them out in Excel. I spent the next four days surfing the web and handing out files.&lt;/p&gt;
&lt;p&gt;This is why I encourage everyone to learn some basic programming.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've independently created a program just like this at a job, and remember my manager initially saying something very similar. Not only does it get the task done faster, but there's something very satisfying about saving yourself and other people boatloads of time with a program.&lt;/p&gt;</summary></entry><entry><title>'Monsters University' Teaser Trailer(s)</title><link href="http://jayhickey.com/2012/06/monsters-university-teaser-trailer" rel="alternate"></link><updated>2012-06-21T09:19:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-21:2012/06/monsters-university-teaser-trailer</id><summary type="html">&lt;p&gt;Although &lt;em&gt;Brave&lt;/em&gt; comes out tomorrow, I can't help but also be excited for Pixar's 2013 film, &lt;em&gt;Monsters University&lt;/em&gt;. A teaser trailer has been released for the prequel to the best Pixar movie ever. It'll be playing before &lt;em&gt;Brave&lt;/em&gt; this weekend.&lt;/p&gt;
&lt;p&gt;There's four versions with different jokes, so make sure to watch them all at &lt;a href="http://www.disney.com/MonstersUniversity"&gt;Disney&lt;/a&gt;, &lt;a href="http://trailers.apple.com/trailers/disney/monstersuniversity"&gt;Apple&lt;/a&gt;, &lt;a href="http://movies.yahoo.com/movie/monsters-university/trailers/monsters-university-teaser-trailer-29717274.html"&gt;Yahoo&lt;/a&gt;, and &lt;a href="http://www.huffingtonpost.com/2012/06/20/monsters-university-trailer-teaser-video_n_1610673.html"&gt;Huffington Post&lt;/a&gt;. The Apple one is my favorite:&lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/tXBCfKa_2uw?autohide=1&amp;amp;fs=1&amp;amp;autoplay=0&amp;amp;iv_load_policy=3&amp;amp;rel=0&amp;amp;modestbranding=1&amp;amp;showinfo=0&amp;amp;hd=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary></entry><entry><title>Why People Like Jonah Lehrer Are Stupid</title><link href="http://jayhickey.com/2012/06/why-people-like-jonah-lehrer-are-stupid" rel="alternate"></link><updated>2012-06-21T02:11:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-21:2012/06/why-people-like-jonah-lehrer-are-stupid</id><summary type="html">&lt;p&gt;Turns out, a large amount of &lt;a href="http://www.newyorker.com/online/blogs/frontal-cortex/2012/06/daniel-kahneman-bias-studies.html"&gt;&lt;em&gt;The New Yorker&lt;/em&gt; piece&lt;/a&gt; that I &lt;a href="http://jayhickey.com/2012/06/16/why-smart-people-are-stupid"&gt;linked to&lt;/a&gt; last week consisted of recycled material: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The victim: Jonah Lehrer. The newly minted New Yorker staff writer’s June 12 blog post “Why Smart People Are Stupid” copied, at times word for word, three paragraphs from Lehrer’s 2011 Wall Street Journal story “The Science of Irrationality.” A few hours later, New York’s Joe Coscarelli and writer Jacob Silverman discovered a bunch more instances in which Lehrer 
reheated his leftovers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Journalists found out today that &lt;a href="http://www.edrants.com/how-jonah-lehrer-recycled-his-own-material-for-imagine/"&gt;Lehrer's been doing this for years&lt;/a&gt;. In 2006, he even plagiarized excerpts from an essay by fellow &lt;em&gt;New Yorker&lt;/em&gt; colleague Malcolm Gladwell. So apparently, pressing ⌘-C then ⌘-V makes you a journalist now.&lt;/p&gt;</summary></entry><entry><title>Second Crack Bookmarklet For Embedding Videos</title><link href="http://jayhickey.com/2012/06/second-crack-bookmarklet-for-videos" rel="alternate"></link><updated>2012-06-17T10:03:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-17:2012/06/second-crack-bookmarklet-for-videos</id><summary type="html">&lt;p&gt;So far, &lt;a href="https://github.com/marcoarment/secondcrack"&gt;Second Crack&lt;/a&gt; has been really nice for blogging. The included bookmarklets have been indispensable for drafting quick links from my iPhone or iPad, but there's no easy way to post videos. I watch tons of videos on the web, and would love to be able to share them here. So I created a bookmarklet that makes it simple to do that.&lt;/p&gt;
&lt;p&gt;This is the first time I've ever worked with PHP, so I'm definitely out of my comfort zone. But I'm pleased with my implementation. The bulk of the functionality relies on two functions:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;get_html&lt;/code&gt; uses &lt;a href="http://curl.haxx.se/"&gt;cURL&lt;/a&gt; to easily return the HTML of the current page as a string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;   
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$ch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;CURLOPT_CONNECTTIMEOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pretty straightforward. By setting &lt;code&gt;CURLOPT_RETURNTRANSFER&lt;/code&gt; to TRUE, &lt;code&gt;curl_exec&lt;/code&gt; is returned as a string instead of being output directly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;video_embed&lt;/code&gt; finds the ID of the video and returns an HTML iframe for embedding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;

   &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;video_embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$vimeo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#player.vimeo.com/video/([0-9]*)#i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$youtube&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#/embed/([0-9a-z_-]+)#i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#youtu.be/([0-9a-z_-]+)#i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 &lt;span class="s1"&gt;&amp;#39;#/v/([0-9a-z_-]+)#i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#v=([0-9a-z_-]+)#i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$vimeo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$vimeo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;iframe src=&amp;quot;http://player.vimeo.com/video/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?title=0&amp;amp;amp;byline=0&amp;amp;amp;portrait=0&amp;amp;amp;color=ff0000&amp;amp;amp;fullscreen=1&amp;amp;amp;autoplay=0&amp;quot; frameborder=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         
            &lt;span class="p"&gt;}&lt;/span&gt;       
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$youtube&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$youtube&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;iframe src=&amp;quot;http://www.youtube.com/embed/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?autohide=1&amp;amp;amp;fs=1&amp;amp;amp;autoplay=0&amp;amp;amp;iv_load_policy=3&amp;amp;amp;rel=0&amp;amp;amp;modestbranding=1&amp;amp;amp;showinfo=0&amp;amp;amp;hd=1&amp;quot; frameborder=&amp;quot;0&amp;quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;   
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first two lines create arrays of regex patterns for video IDs of both embedded and non-embedded videos.&lt;sup id="fnref:SC"&gt;&lt;a class="footnote-ref" href="#fn:SC" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;preg_match&lt;/code&gt; then searches for a match in the HTML and returns an array called &lt;code&gt;$id&lt;/code&gt;. &lt;code&gt;$id[0]&lt;/code&gt; has the full text of the regex match and &lt;code&gt;$id[1]&lt;/code&gt; has the text that matches the first captured parenthesized subpattern (i.e., just the video ID). Upon a match, embed code is returned with &lt;code&gt;$id[1]&lt;/code&gt;'s value in place.&lt;/p&gt;
&lt;h3&gt;Notes:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This bookmarklet only works for &lt;strong&gt;YouTube&lt;/strong&gt; and &lt;strong&gt;Vimeo&lt;/strong&gt; videos. Pretty much all of my online video viewing is from these two services, so I'm fine with this limitation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Any selected text will also be included in the draft as a blockquote. If no video is found on the current page, the bookmarklet functions just like Second Crack's included "Draft Link".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://jayhickey.com/media/2012/06/add-video.zip"&gt;Download&lt;/a&gt;&lt;/strong&gt; the source for the bookmarklet and install it the same way as &lt;a href="https://github.com/marcoarment/secondcrack#posting-with-bookmarklets"&gt;Marco instructs&lt;/a&gt;. If you already have the other bookmarklets setup, just place &lt;code&gt;add-video.php&lt;/code&gt; in the same directory and navigate to, e.g.:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;http://admin.myblog.com/add-video.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and install the bookmarklet from there.&lt;/p&gt;
&lt;p&gt;Alternatively, I've added this to the existing "Draft Article" and "Draft Link" bookmarklet code. This conveniently keeps all the bookmarklets together and in one file. See the full source at my fork on &lt;a href="https://github.com/jayhickey/secondcrack/blob/master/api-www/add-draft.php"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm open to all ideas on improving the existing regex, expanding the functionality to other video services, or anything that will make this better. &lt;a href="http://jayhickey.com/about"&gt;Get in touch&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:SC"&gt;
&lt;p&gt;These are mixes of patterns I threw together and ones found on the web. They've worked against everything I've tried—mobile and non-mobile sites, embedded and non-embedded videos—but there may be some edge cases I've missed.&amp;#160;&lt;a class="footnote-backref" href="#fnref:SC" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry><entry><title>Why Smart People Are Stupid</title><link href="http://jayhickey.com/2012/06/why-smart-people-are-stupid" rel="alternate"></link><updated>2012-06-16T01:49:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-16:2012/06/why-smart-people-are-stupid</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Here’s a simple arithmetic question: A bat and ball cost a dollar and ten cents. The bat costs a dollar more than the ball. How much does the ball cost?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I jumped the gun and got it wrong. But wait, does that make me stupid? Or smart?&lt;/p&gt;</summary></entry><entry><title>Joggobot Drone Helps Joggers Keep a Steady Pace</title><link href="http://jayhickey.com/2012/06/joggobot-drone-helps-joggers-keep-a-steady-pace" rel="alternate"></link><updated>2012-06-12T05:47:00-04:00</updated><author><name></name></author><id>tag:jayhickey.com,2012-06-12:2012/06/joggobot-drone-helps-joggers-keep-a-steady-pace</id><summary type="html">&lt;p&gt;Cool idea, but boy would people look silly chasing an AR Drone around.  &lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/4x4d8IX_0kI?autohide=1&amp;amp;fs=1&amp;amp;autoplay=0&amp;amp;iv_load_policy=3&amp;amp;rel=0&amp;amp;modestbranding=1&amp;amp;showinfo=0&amp;amp;hd=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary></entry></feed>